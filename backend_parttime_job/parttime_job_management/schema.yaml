openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/password_reset/:
    post:
      operationId: api_password_reset_create
      description: |-
        An Api View which provides a method to request a password reset token based on an e-mail address

        Sends a signal reset_password_token_created when a reset token was created
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Email'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Email'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: ''
  /api/password_reset/confirm/:
    post:
      operationId: api_password_reset_confirm_create
      description: An Api View which provides a method to reset a password based on
        a unique token
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordToken'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordToken'
          description: ''
  /api/password_reset/validate_token/:
    post:
      operationId: api_password_reset_validate_token_create
      description: An Api View which provides a method to verify that a token is valid
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetToken'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetToken'
          description: ''
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /application-profile/:
    get:
      operationId: application_profile_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - application-profile
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedApplicationList'
          description: ''
  /application-profile/{id}/my-applications/:
    patch:
      operationId: application_profile_my_applications_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this application.
        required: true
      tags:
      - application-profile
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedApplication'
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: ''
  /application-profile/{id}/update-status/:
    patch:
      operationId: application_profile_update_status_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this application.
        required: true
      tags:
      - application-profile
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedApplication'
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: ''
  /application-profile/apply/:
    post:
      operationId: application_profile_apply_create
      tags:
      - application-profile
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Application'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: ''
  /company-approved/:
    get:
      operationId: company_approved_list
      tags:
      - company-approved
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
          description: ''
  /company-approved/{id}/is-approved/:
    post:
      operationId: company_approved_is_approved_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company.
        required: true
      tags:
      - company-approved
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
  /company-list/:
    get:
      operationId: company_list_list
      tags:
      - company-list
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
          description: ''
  /company/{id}/:
    get:
      operationId: company_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company.
        required: true
      tags:
      - company
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
  /company/{id}/follow/:
    post:
      operationId: company_follow_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company.
        required: true
      tags:
      - company
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
  /company/{id}/followers-count/:
    get:
      operationId: company_followers_count_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company.
        required: true
      tags:
      - company
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
  /company/create-company/:
    post:
      operationId: company_create_company_create
      tags:
      - company
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
  /company/current-company/:
    get:
      operationId: company_current_company_retrieve
      tags:
      - company
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
  /company/update-company/:
    patch:
      operationId: company_update_company_partial_update
      tags:
      - company
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCompany'
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
  /employer-ratings/:
    get:
      operationId: employer_ratings_list
      tags:
      - employer-ratings
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployerRating'
          description: ''
    post:
      operationId: employer_ratings_create
      tags:
      - employer-ratings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployerRating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployerRating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmployerRating'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployerRating'
          description: ''
  /employer-ratings/{id}/:
    get:
      operationId: employer_ratings_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employer rating.
        required: true
      tags:
      - employer-ratings
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployerRating'
          description: ''
    put:
      operationId: employer_ratings_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employer rating.
        required: true
      tags:
      - employer-ratings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployerRating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployerRating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmployerRating'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployerRating'
          description: ''
    patch:
      operationId: employer_ratings_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employer rating.
        required: true
      tags:
      - employer-ratings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmployerRating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEmployerRating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEmployerRating'
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployerRating'
          description: ''
    delete:
      operationId: employer_ratings_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employer rating.
        required: true
      tags:
      - employer-ratings
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /job/:
    get:
      operationId: job_list
      tags:
      - job
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
          description: ''
  /job-list/:
    get:
      operationId: job_list_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - job-list
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedJobList'
          description: ''
  /job/create-job/:
    post:
      operationId: job_create_job_create
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Job'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
  /notification/:
    get:
      operationId: notification_list
      tags:
      - notification
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
          description: ''
  /ratings/:
    get:
      operationId: ratings_list
      tags:
      - ratings
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rating'
          description: ''
    post:
      operationId: ratings_create
      tags:
      - ratings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Rating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Rating'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
  /ratings/{id}/:
    get:
      operationId: ratings_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rating.
        required: true
      tags:
      - ratings
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
    put:
      operationId: ratings_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rating.
        required: true
      tags:
      - ratings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Rating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Rating'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
    patch:
      operationId: ratings_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rating.
        required: true
      tags:
      - ratings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRating'
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
    delete:
      operationId: ratings_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rating.
        required: true
      tags:
      - ratings
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /review-application/:
    get:
      operationId: review_application_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - review-application
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedApplicationList'
          description: ''
  /review-application/{id}/review/:
    post:
      operationId: review_application_review_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this application.
        required: true
      tags:
      - review-application
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Application'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: ''
  /user/:
    post:
      operationId: user_create
      tags:
      - user
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /user/current-user/:
    get:
      operationId: user_current_user_retrieve
      tags:
      - user
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /user/update-user/:
    patch:
      operationId: user_update_user_partial_update
      tags:
      - user
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    Application:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        job:
          type: integer
        education:
          type: string
        experience:
          type: string
        current_job:
          type: string
        hope_salary:
          type: string
          maxLength: 100
        cv:
          type: string
          format: uri
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        status_display:
          type: string
          readOnly: true
        employer_note:
          type: string
          readOnly: true
      required:
      - cv
      - employer_note
      - id
      - job
      - status
      - status_display
    Company:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        images:
          type: array
          items:
            type: string
            format: uri
          writeOnly: true
        image_list:
          type: array
          items:
            $ref: '#/components/schemas/CompanyImage'
          readOnly: true
        followed:
          type: boolean
          readOnly: true
        follower_count:
          type: integer
          readOnly: true
        active:
          type: boolean
        created_date:
          type: string
          format: date-time
          readOnly: true
        updated_date:
          type: string
          format: date-time
          readOnly: true
        company_name:
          type: string
          maxLength: 255
        tax_id:
          type: string
          maxLength: 100
        description:
          type: string
        company_phone:
          type: string
          maxLength: 20
        company_email:
          type: string
          format: email
          maxLength: 254
        address:
          type: string
          maxLength: 255
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        is_approved:
          type: boolean
        is_rejected:
          type: boolean
        user:
          type: string
          format: uuid
          readOnly: true
      required:
      - address
      - company_name
      - created_date
      - followed
      - follower_count
      - id
      - image_list
      - images
      - latitude
      - longitude
      - tax_id
      - updated_date
      - user
    CompanyImage:
      type: object
      properties:
        image:
          type: string
      required:
      - image
    Email:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    EmployerRating:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        employer:
          type: string
          format: uuid
          readOnly: true
        user:
          type: string
          format: uuid
        application:
          type: integer
          nullable: true
        rating:
          type: integer
          maximum: 5
          minimum: 1
        comment:
          type: string
        created_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - application
      - created_date
      - employer
      - id
      - rating
      - user
    Job:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        company:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        location:
          type: string
        skills:
          type: string
        salary:
          type: string
          maxLength: 100
        working_time:
          type: string
          maxLength: 100
        active:
          type: boolean
          readOnly: true
      required:
      - active
      - company
      - description
      - id
      - location
      - salary
      - skills
      - title
      - working_time
    Notification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        message:
          type: string
        is_read:
          type: boolean
        created_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_date
      - id
      - message
    PaginatedApplicationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Application'
    PaginatedJobList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Job'
    PasswordToken:
      type: object
      properties:
        password:
          type: string
        token:
          type: string
      required:
      - password
      - token
    PatchedApplication:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        job:
          type: integer
        education:
          type: string
        experience:
          type: string
        current_job:
          type: string
        hope_salary:
          type: string
          maxLength: 100
        cv:
          type: string
          format: uri
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        status_display:
          type: string
          readOnly: true
        employer_note:
          type: string
          readOnly: true
    PatchedCompany:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        images:
          type: array
          items:
            type: string
            format: uri
          writeOnly: true
        image_list:
          type: array
          items:
            $ref: '#/components/schemas/CompanyImage'
          readOnly: true
        followed:
          type: boolean
          readOnly: true
        follower_count:
          type: integer
          readOnly: true
        active:
          type: boolean
        created_date:
          type: string
          format: date-time
          readOnly: true
        updated_date:
          type: string
          format: date-time
          readOnly: true
        company_name:
          type: string
          maxLength: 255
        tax_id:
          type: string
          maxLength: 100
        description:
          type: string
        company_phone:
          type: string
          maxLength: 20
        company_email:
          type: string
          format: email
          maxLength: 254
        address:
          type: string
          maxLength: 255
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        is_approved:
          type: boolean
        is_rejected:
          type: boolean
        user:
          type: string
          format: uuid
          readOnly: true
    PatchedEmployerRating:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        employer:
          type: string
          format: uuid
          readOnly: true
        user:
          type: string
          format: uuid
        application:
          type: integer
          nullable: true
        rating:
          type: integer
          maximum: 5
          minimum: 1
        comment:
          type: string
        created_date:
          type: string
          format: date-time
          readOnly: true
    PatchedRating:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
        company:
          type: integer
        job:
          type: integer
          nullable: true
        rating:
          type: integer
          maximum: 5
          minimum: 1
        comment:
          type: string
        created_date:
          type: string
          format: date-time
          readOnly: true
    PatchedUser:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          maxLength: 15
        password:
          type: string
          writeOnly: true
          maxLength: 128
        role:
          $ref: '#/components/schemas/RoleEnum'
        avatar:
          type: string
          nullable: true
    Rating:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
        company:
          type: integer
        job:
          type: integer
          nullable: true
        rating:
          type: integer
          maximum: 5
          minimum: 1
        comment:
          type: string
        created_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - company
      - created_date
      - id
      - job
      - rating
      - user
    ResetToken:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    RoleEnum:
      enum:
      - admin
      - employer
      - candidate
      type: string
      description: |-
        * `admin` - Quản trị viên
        * `employer` - Nhà tuyển dụng
        * `candidate` - Ứng viên
    StatusEnum:
      enum:
      - pending
      - accepted
      - rejected
      type: string
      description: |-
        * `pending` - Đang chờ
        * `accepted` - Đã chấp nhận
        * `rejected` - Đã từ chối
    User:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          maxLength: 15
        password:
          type: string
          writeOnly: true
          maxLength: 128
        role:
          $ref: '#/components/schemas/RoleEnum'
        avatar:
          type: string
          nullable: true
      required:
      - password
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    oauth2:
      type: oauth2
      flows: {}
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
